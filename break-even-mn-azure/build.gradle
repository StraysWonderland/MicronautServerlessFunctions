plugins {
    id("org.jetbrains.kotlin.jvm") version "1.4.10"
    id("org.jetbrains.kotlin.kapt") version "1.4.10"
    id("org.jetbrains.kotlin.plugin.allopen") version "1.4.10"
    id("com.microsoft.azure.azurefunctions") version "1.5.0"
    id("io.micronaut.library") version "1.3.4"
}

version = "0.1"
group = "info.novatec"

repositories {
    mavenCentral()
}

micronaut {
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("info.novatec.*")
    }
}

dependencies {
    compileOnly("org.graalvm.nativeimage:svm")
    implementation("io.micronaut:micronaut-validation")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}")
    implementation("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
    implementation("io.micronaut.kotlin:micronaut-kotlin-runtime")
    implementation("io.micronaut:micronaut-runtime")
    implementation("javax.annotation:javax.annotation-api")
    implementation("com.microsoft.azure.functions:azure-functions-java-library")
    implementation("io.micronaut.azure:micronaut-azure-function")
    implementation("io.micronaut.azure:micronaut-azure-function-http")
    runtimeOnly("ch.qos.logback:logback-classic")
    runtimeOnly("com.fasterxml.jackson.module:jackson-module-kotlin")
    testImplementation("io.micronaut:micronaut-http-client")
}



java {
    sourceCompatibility = JavaVersion.toVersion("11")
}

tasks {
    compileKotlin {
        kotlinOptions {
            jvmTarget = "11"
        }
    }
    compileTestKotlin {
        kotlinOptions {
            jvmTarget = "11"
        }
    }

azurefunctions {
    resourceGroup = "java-functions-group"
    appName = "break-even-mn-azure"
    pricingTier = "Consumption"
    region = "westus"
    runtime {
      os = "linux"
    }
    localDebug = "transport=dt_socket,server=y,suspend=n,address=5005"
}

}
